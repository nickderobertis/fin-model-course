
Projects
***********

Overview of the course projects.

Resources
============


- :download:`Project Grading Overview </_static/generated/pdfs/PJ0 Project Grading Overview.pdf>`
        

- :download:`Project 1 - Excel and Python TVM </_static/generated/pdfs/PJ1 Excel and Python TVM.pdf>`
        

- :download:`Project 1 Template - Python </_static/Project Materials/Project 1/Project 1 Template.ipynb>`
        

- :download:`Project 1 Template - Excel </_static/Project Materials/Project 1/Project 1 Template.xlsx>`
        

- :download:`Project 2 - Probabilistic Loan Pricing </_static/generated/pdfs/PJ2 Probabilistic Loan Pricing.pdf>`
        

- :download:`Project 2 Template - Python </_static/Project Materials/Project 2/Project 2 Template.ipynb>`
        

- :download:`Project 2 Template - Excel </_static/Project Materials/Project 2/Project 2 Template.xlsx>`
        

Project 0 - Project Grading Overview
=======================================

.. youtube:: SW4Yk-pQdA8
    :height: 315
    :width: 560
    :align: center

|
            
Notes
--------

- The biggest part of the typical project grade is accuracy, but that only represents 60% of the total.
- Answers with the baseline model inputs are often provided, so use these to ensure you have built the model correctly. But you cannot rely on these alone. Your model needs to be able to work with any reasonable value for any input and adjust appropriately. After you have matched the baseline result, then start changing around the inputs and ensure that your model responds in a way that is logical and consistent with the change in the input.
- I have built out automated grading for the first three projects for the accuracy. It will tell me if everything in your model works properly. In order for this auto-grading to work properly, you need to conform to the expectations of the project, this is why I make following the template a separate grade.
- If the auto-grader finds that your model does not work properly, then I go through it in detail to understand where the issues are occurring. I fix the issues one by one until your model works properly. Then I give comments on where exactly you went wrong and take off points appropriately.
- Regardless of the auto-grading, I go through everyone's model line by line to assess the readability and formatting of the model.

Resources
------------


- :download:`Project Grading Overview </_static/generated/pdfs/PJ0 Project Grading Overview.pdf>`
        

Project 1 - Excel and Python TVM
===================================

.. youtube:: vcvE5RrtrL4
    :height: 315
    :width: 560
    :align: center

|
            
Notes
--------

- This project is really about cash flow modeling which is a huge part of financial modeling.
- This is a classic capital budgeting problem. Buy production capacity, produce units for variable cost, maximize NPV based on selecting the investment in production capacity and unit volume
- Leave the bonus for last. It is fairly separate from the rest of the problem. The bonus is really intended for the more advanced students coming in with Python or programming experience who did not have a hard time with the main project to provide some additional learning. Usually very few students complete the bonuses
- You are completing the entire project in both Excel and Python separately so we can understand the differences
- Please start as early as you can. This project has the highest learning curve and students who have waited to the last minute have ended up struggling in the entire course

Resources
------------


- :download:`Project 1 - Excel and Python TVM </_static/generated/pdfs/PJ1 Excel and Python TVM.pdf>`
        

- :download:`Project 1 Template - Python </_static/Project Materials/Project 1/Project 1 Template.ipynb>`
        

- :download:`Project 1 Template - Excel </_static/Project Materials/Project 1/Project 1 Template.xlsx>`
        

Project 2 - Probabilistic Loan Pricing
=========================================

.. youtube:: Jxuuw8mM-vQ
    :height: 315
    :width: 560
    :align: center

|
            
Notes
--------

- The focus of this project is to reinforce probabilistic modeling and to solve a common problem faced by lenders: deciding the loan terms to offer
- This project also tests your ability to explore the parameter space and visualize the results, extending the base model
- This model typically incorporates internal randomness. This means you will get a different result each time you run your model. You can increase the number of iterations to get a more consistent result, but it will also take longer for the model to run. When checking your answers against the provided solutions, they will not match exactly, but as you run the model multiple times each number should be similar to the reported answers. When you are ready to submit the model, run it with 1000 iterations and be sure to allow time for this
- This project, and the remaining projects going forward in the course, may be submitted as an Excel model, a Python model, or a combination model that uses both Python and Excel
- It is up to you how you want to structure the model and which tools to use, but this problem is difficult to solve using only Excel. If you want to work in Excel as much as possible, I would recommend building the base deterministic model in Excel then handle the randomness and exploring the parameter space using Python
- As always, save the bonus for last, though students have generally found this bonus exercise easier than that of the first project

Resources
------------


- :download:`Project 2 - Probabilistic Loan Pricing </_static/generated/pdfs/PJ2 Probabilistic Loan Pricing.pdf>`
        

- :download:`Project 2 Template - Python </_static/Project Materials/Project 2/Project 2 Template.ipynb>`
        

- :download:`Project 2 Template - Excel </_static/Project Materials/Project 2/Project 2 Template.xlsx>`
        
